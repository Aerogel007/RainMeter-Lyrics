[MeterContainer]
Meter=Image
X=0
Y=0
W=4000
H=3000




[MeterLyrics]
Meter=String
Text="local artist = SKIN:GetMeasure("MeasureArtist"):GetStringValue() #CRLF#

    if artist ~= "" then#CRLF#
    local parsedArtist = GetTitleBeforeComma(artist)#CRLF#
    SKIN:Bang('!SetOption', 'MeasureParsedArtist', 'String', parsedArtist)#CRLF#
    -- !SetOption is used to set the value of a measure#CRLF#

    else
        SKIN:Bang('!Log', 'No Artist yet.', 'Debug')#CRLF#
    end

    -- SKIN:Bang('!UpdateMeasure', 'MeasureParsedArtist')#CRLF#
    SKIN:Bang('!UpdateMeasure', 'MeasureFetchLyrics')#CRLF#
    -- !UpdateMeasure is used to update the value of a measure"
FontSize=12
FontColor=255,255,255,255
StringStyle=Normal
StringAlign=CenterCenter
Padding=10,10,10,10
X=200
Y=0
W=400
H=300
ClipString=0
DynamicVariables=1
Container=MeterContainer
antiAlias=1
spacing=1



[MeterTest]
Meter=String
Text="Test#CRLF#Test2"
X=10
Y=10

[MeterScrollValue]
Meter=String
MeasureName=MeasureScroll
Text="Scroll Value: %1"
X=0
Y=50
FontSize=12
FontColor=255,255,255
DynamicVariables=1

; -----------------------------------Scroling----------------------------------------------------------------

[MeasureScroll]
Measure=Calc
Formula=MeasureScroll + 5
UpdateRate=0.01
MinValue=3000
MaxValue=10
DynamicVariables=1