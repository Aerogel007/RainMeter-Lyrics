[Rainmeter]
Update=1000

[Variables]
PlayerName=Spotify  ; Replace with your player name if different
BackgroundColor=50,50,50,255  ; Dark gray background color
ApiKey=oq2WMN0Bnlx3CDkxME1k1_Mg1jbB0zb_choZ177up9Tcz16JaHf7Nsa2CFhCefiE

[MeasureTitle]
Measure=Plugin
Plugin=WebNowPlaying
PlayerName=#PlayerName#
PlayerType=Title
OnChangeAction=[!CommandMeasure "MeasureFetchURL" "Update"]
;!commandmeasure 


[MeasureArtist]
Measure=Plugin
Plugin=WebNowPlaying
PlayerName=#PlayerName#
PlayerType=Artist

[MeasureFetchURL]
Measure=String
String="https://api.genius.com/search?q=[MeasureArtist] [MeasureTitle]&access_token=#ApiKey#"
DynamicVariables=1
UpdateDivider=-1
OnUpdateAction=[!Log "[MeasureFetchURL]"]


[MeasureFetchLyricsJSON]
Measure=WebParser
URL=[&MeasureFetchURL]
;use & to get the raw String value of the measure. otherwise webparser wil not give us .json response
; RegExp=(?SiU)"path": "([^\"]+)"
RegExp="(?si)\{.*\}"
UpdateRate=0
DynamicVariables=1
updatedivider=-1
OnUpdateAction=[!Log "FetchLyricsJSON: [MeasureFetchLyricsJSON]" "Debug"]


[Script]
Measure=Script
ScriptFile=#@#CheckScript.lua

[MeasurePathToLyrics]
Measure=String
UpdateDivider=-1
OnUpdateAction=[!Log "..........MeasurePathToLyrics: [MeasurePathToLyrics]" "Debug"]


[MeasureFullLinkToLyrics]
Measure=String
String="https://genius.com[MeasurePathToLyrics]"
updatedivider=-1
DynamicVariables=1
;don't forget to use DynamicVariables=1 if not [MeasurePathToLyrics] will not be updated
OnUpdateAction=[!Log "Link to Lyrics: [MeasureFullLinkToLyrics]" "Debug"]

;tried to use jsorparser here but didn't work
; [Demo]
; Measure=Plugin
; Plugin=JsonParser.dll
; Source=[MeasureFetchLyricsJSON]
; Query="response.hits[0].result.path"
; updatedivider=-1
; ;updaterate 0 means it just doesn't update it's visuals. it still runs the inner operations
; ;updatedivder, -1 will stop automatic update and only will update when updated explicitly
; OnUpdateAction[!log ".............. Demo: [Demo]" "Debug"]

;tried to use dkjson here but didn't work
; [MeasureExtractPath]
; Measure=Script
; ScriptFile=#@#GetPath.lua
; ;UpdateDivider=1
; OnUpdateAction=[!Log "Lua Script executed........[MeasureExtractPath] Extracting path..." "Debug"]

;it didn't work but this is the way to pass parameters to lua script form rainmeter
; [MeasurePathToLyrics]
; Measure=String
; OnUpdateAction=[!CommandMeasure MeasureExtractPath "processJSON('[MeasureFetchLyricsJSON]')"]
; ;OnUpdateAction runs when the measure is updated. and we are using (!) to call the function in lua script
; ;!CommandMeasure to call the lua script function___Script Measure that has the function___"function name"
; OnUpdateAction=[!Log "........Path to Lyrics: [&MeasurePathToLyrics]" "Debug"]








[MeterBackground]
Meter=Image
X=-30
Y=0
W=400
H=300
SolidColor=#BackgroundColor#

[MeterTitle]
Meter=String
MeasureName=MeasureTitle
X=10
Y=10
FontColor=255,255,255,255
FontSize=16
StringAlign=Left
Text="Title: [MeasureTitle]"
OnUpdateAction=[!Log "Title: [MeasureTitle]" "Debug"]

[MeterLyrics]
Meter=String
X=10
Y=100
updatedivider=-1
FontColor=255,255,255,255
FontSize=16
StringAlign=Left
Text="Lyrics"
OnUpdateAction=[!Log "xxxxxxxxxxx" "Debug"]

[MeterArtist]
Meter=String
MeasureName=MeasureArtist
X=10
Y=40
FontColor=255,255,255,255
FontSize=16
StringAlign=Left
Text="Artist: [MeasureArtist]"
OnUpdateAction=[!Log "Artist: [MeasureArtist]" "Debug"]

[MeterLyrics]
Meter=String
MeasureName=MeasureFetchLyrics
X=10
Y=70
FontColor=255,255,255,255
FontSize=12
StringAlign=Left
Text="[MeasureFetchLyrics]"
OnUpdateAction=[!Log "Lyrics: [MeasureFetchLyrics]" "Debug"]