[Rainmeter]
Update=1000


[Variables]
PlayerName=Spotify  ; Replace with your player name if different
BackgroundColor=50,50,50,255  ; Dark gray background color
ApiURL=https://api.lyrics.ovh/v1


[MeasureArtist]
Measure=Plugin
Plugin=WebNowPlaying
PlayerName=#PlayerName#
PlayerType=Artist

[MeasureTitle]
Measure=Plugin
Plugin=WebNowPlaying
PlayerName=#PlayerName#
PlayerType=Title
OnChangeAction= [!UpdateMeasure "Script1"]
;OnChangeAction=[!Log "SCRIPT UPDATED" "Debug"]


[MeasureParsedArtist]
Measure=String
String=[MeasureArtist]

; OnUpdateAction=[!Log "..........MeasureParsedArtist: [MeasureParsedArtist]" "Debug"]


[MeasureLinkToLyrics]
Measure=String
String="#ApiURL#/[MeasureParsedArtist]/[MeasureTitle]"
DynamicVariables=1
UpdateDivider=1
OnChangeAction=[!Log "Link to Lyrics: [MeasureLinkToLyrics]" "Debug"][!CommandMeasure "MeasureFetchLyrics" "Update"] 


[MeasureFetchLyrics]
Measure=WebParser
URL=[MeasureLinkToLyrics]
RegExp="(?si)\{.*\}"
;rainmeter doesn't support lookbehind regex so we have to use this
DynamicVariables=1
UpdateRate=120
UpdateDivider=-1
OnConnectErrorAction=[!Log "Failed to connect to the Lyrics API." "Error"]
OnDownloadErrorAction=[!Log "Error downloading lyrics data." "Error"]
; OnUpdateAction=[!Log "Fetching lyrics for: [MeasureParsedArtist] - [MeasureTitle]" "Debug"]
OnUpdateAction=[!Log "...............MeasureFetchLyrics: [MeasureFetchLyrics]" "Debug"]
;we can run OnUpdateAction mmultiple times for single measure but only one !Log will be shown in the log
;WebPaser gets updated even when updateDivider is -1 when we change the URL. because it is considered an explicit update

[MeasureIntermediate]
measure=String
String=[MeasureFetchLyrics]
DynamicVariables=1
UpdateDivider=-1
OnChangeAction=[!UpdateMeasure "Script2"]
;using intermediate because webparser doesn't support OnChangeAction


[Script1]
Measure=Script
ScriptFile=#@#ForLink.lua
updateDivider=-1

[Script2]
Measure=Script
ScriptFile=#@#ParsingJSON.lua
updateDivider=-1


[MeasureDuration]
Measure=Plugin
Plugin=WebNowPlaying
PlayerName=#PlayerName#
PlayerType=DURATION
; OnUpdateAction=[!Log "Duration: [MeasureDuration]" "Debug"]

[MeasurePosition]
Measure=Plugin
Plugin=WebNowPlaying
PlayerName=#PlayerName#
PlayerType=POSITION
; OnUpdateAction=[!Log "Position: [MeasurePosition]" "Debug"]

; [MeasureScrollTrigger]
; Measure=Calc
; Formula=1
; UpdateRate=0.1
; ; Update every second
; OnUpdateAction=[!UpdateMeasure "Script3"]
;this is to control the rate of scrolling with Update rate

; -----------------------------------Meters----------------------------------------------------------------


; make a rectangle meter container to hold all the meters
[MeterContainer]
Meter=Shape
Shape=Rectangle 0,0,800,2000 | StrokeWidth 1


; [MeterDuration]
; Meter=String
; MeasureName=MeasureDuration
; MeasureName2=MeasurePosition
; FontSize=30
; FontColor=255,255,255,255
; StringStyle=Normal
; X=150
; Y=
; Text=%2 / %1

[MeterLyrics]
Meter=String
FontSize=12
FontColor=255,255,255,255
StringStyle=Normal
StringAlign=CenterCenter
X=300
Y=1000
W=400
H=1000
ClipString=0
DynamicVariables=1
antiAlias=1
Container=MeterContainer
InlineSetting=Size | (12*0.5)
InlinePattern=\R
;so the space between lines is calculated using, the font size of #CRLF# or \r and it changes it's size thus changing the line spacing?




; -----------------------------------Scroling----------------------------------------------------------------

; [MeasureScroll]
; Measure=Calc
; Formula=MeasureScroll - 7
; UpdateRate=0.01
; MinValue= 1000
; MaxValue= 1000
; DynamicVariables=1

; [Script3]
; Measure=Script
; ScriptFile=#@#Scrolling.lua
; ; updateDivider=-1
; updateDivider=0.1
